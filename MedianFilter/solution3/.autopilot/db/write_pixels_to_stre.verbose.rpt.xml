<profile>

<section name = "Vivado HLS Report for 'write_pixels_to_stre'" level="0">
<item name = "Date">Thu Dec  6 13:20:26 2018
</item>
<item name = "Version">2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)</item>
<item name = "Project">MedianFilter</item>
<item name = "Solution">solution3</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020clg484-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00, 8.75, 1.25</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">360009, 360009, 360009, 360009, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- write_pixels_to_stream_loop">360001, 360001, 3, 1, 1, 360000, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="5">Name, BRAM_18K, DSP48E, FF, LUT</keys>
<column name="DSP">-, -, -, -</column>
<column name="Expression">-, -, 0, 100</column>
<column name="FIFO">-, -, -, -</column>
<column name="Instance">-, -, -, -</column>
<column name="Memory">-, -, -, -</column>
<column name="Multiplexer">-, -, -, 137</column>
<column name="Register">-, -, 68, -</column>
<specialColumn name="Available">280, 220, 106400, 53200</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="6">Instance, Module, BRAM_18K, DSP48E, FF, LUT</keys>
</table>
</item>
<item name = "DSP48"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="9">Memory, Module, BRAM_18K, FF, LUT, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="7">Name, BRAM_18K, FF, LUT, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="i_fu_171_p2">+, 0, 0, 26, 19, 1</column>
<column name="ap_block_state10_pp0_stage0_iter2">and, 0, 0, 8, 1, 1</column>
<column name="ap_block_state9_pp0_stage0_iter1">and, 0, 0, 8, 1, 1</column>
<column name="ap_condition_298">and, 0, 0, 8, 1, 1</column>
<column name="exitcond_i_i_fu_165_p2">icmp, 0, 0, 18, 19, 19</column>
<column name="ap_block_pp0_stage0_01001">or, 0, 0, 8, 1, 1</column>
<column name="ap_block_state1">or, 0, 0, 8, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 8, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 8, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">47, 10, 1, 10</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="ap_sig_ioackin_m_axi_in_array_ARREADY">9, 2, 1, 2</column>
<column name="i_i_i_reg_133">9, 2, 19, 38</column>
<column name="in_array_blk_n_AR">9, 2, 1, 2</column>
<column name="in_array_blk_n_R">9, 2, 1, 2</column>
<column name="in_stream_V_blk_n">9, 2, 1, 2</column>
<column name="out_array_out_blk_n">9, 2, 1, 2</column>
<column name="real_start">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">9, 0, 9, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_reg_ioackin_m_axi_in_array_ARREADY">1, 0, 1, 0</column>
<column name="ap_reg_pp0_iter1_exitcond_i_i_reg_183">1, 0, 1, 0</column>
<column name="exitcond_i_i_reg_183">1, 0, 1, 0</column>
<column name="i_i_i_reg_133">19, 0, 19, 0</column>
<column name="start_once_reg">1, 0, 1, 0</column>
<column name="temp_reg_192">32, 0, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="start_full_n">in, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="start_out">out, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="start_write">out, 1, ap_ctrl_hs, write_pixels_to_stre, return value</column>
<column name="in_stream_V_din">out, 32, ap_fifo, in_stream_V, pointer</column>
<column name="in_stream_V_full_n">in, 1, ap_fifo, in_stream_V, pointer</column>
<column name="in_stream_V_write">out, 1, ap_fifo, in_stream_V, pointer</column>
<column name="m_axi_in_array_AWVALID">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWREADY">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWADDR">out, 32, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWID">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWLEN">out, 32, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWSIZE">out, 3, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWBURST">out, 2, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWLOCK">out, 2, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWCACHE">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWPROT">out, 3, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWQOS">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWREGION">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_AWUSER">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WVALID">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WREADY">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WDATA">out, 32, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WSTRB">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WLAST">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WID">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_WUSER">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARVALID">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARREADY">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARADDR">out, 32, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARID">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARLEN">out, 32, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARSIZE">out, 3, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARBURST">out, 2, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARLOCK">out, 2, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARCACHE">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARPROT">out, 3, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARQOS">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARREGION">out, 4, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_ARUSER">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RVALID">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RREADY">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RDATA">in, 32, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RLAST">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RID">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RUSER">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_RRESP">in, 2, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_BVALID">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_BREADY">out, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_BRESP">in, 2, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_BID">in, 1, m_axi, in_array, pointer</column>
<column name="m_axi_in_array_BUSER">in, 1, m_axi, in_array, pointer</column>
<column name="in_array_offset">in, 32, ap_none, in_array_offset, scalar</column>
<column name="out_array">in, 32, ap_none, out_array, scalar</column>
<column name="out_array_out_din">out, 32, ap_fifo, out_array_out, pointer</column>
<column name="out_array_out_full_n">in, 1, ap_fifo, out_array_out, pointer</column>
<column name="out_array_out_write">out, 1, ap_fifo, out_array_out, pointer</column>
</table>
</item>
</section>
</profile>
