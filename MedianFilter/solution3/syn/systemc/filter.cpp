// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> filter::ap_ST_fsm_state1 = "1";
const sc_lv<3> filter::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> filter::ap_ST_fsm_state16 = "100";
const sc_lv<32> filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool filter::ap_const_boolean_1 = true;
const sc_lv<32> filter::ap_const_lv32_1 = "1";
const bool filter::ap_const_boolean_0 = false;
const sc_lv<1> filter::ap_const_lv1_0 = "0";
const sc_lv<1> filter::ap_const_lv1_1 = "1";
const sc_lv<19> filter::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<10> filter::ap_const_lv10_0 = "0000000000";
const sc_lv<19> filter::ap_const_lv19_57E40 = "1010111111001000000";
const sc_lv<19> filter::ap_const_lv19_1 = "1";
const sc_lv<10> filter::ap_const_lv10_258 = "1001011000";
const sc_lv<10> filter::ap_const_lv10_1 = "1";
const sc_lv<32> filter::ap_const_lv32_9 = "1001";
const sc_lv<9> filter::ap_const_lv9_0 = "000000000";
const sc_lv<32> filter::ap_const_lv32_2 = "10";

filter::filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_array_0_U = new filter_temp_array_0("temp_array_0_U");
    temp_array_0_U->clk(ap_clk);
    temp_array_0_U->reset(ap_rst);
    temp_array_0_U->address0(temp_array_0_address0);
    temp_array_0_U->ce0(temp_array_0_ce0);
    temp_array_0_U->q0(temp_array_0_q0);
    temp_array_0_U->address1(temp_array_0_addr_reg_434);
    temp_array_0_U->ce1(temp_array_0_ce1);
    temp_array_0_U->we1(temp_array_0_we1);
    temp_array_0_U->d1(temp_array_1_q0);
    temp_array_1_U = new filter_temp_array_0("temp_array_1_U");
    temp_array_1_U->clk(ap_clk);
    temp_array_1_U->reset(ap_rst);
    temp_array_1_U->address0(temp_array_1_address0);
    temp_array_1_U->ce0(temp_array_1_ce0);
    temp_array_1_U->q0(temp_array_1_q0);
    temp_array_1_U->address1(temp_array_1_addr_reg_440);
    temp_array_1_U->ce1(temp_array_1_ce1);
    temp_array_1_U->we1(temp_array_1_we1);
    temp_array_1_U->d1(in_stream_V_dout);
    grp_bubble_sort_fu_196 = new bubble_sort("grp_bubble_sort_fu_196");
    grp_bubble_sort_fu_196->ap_clk(ap_clk);
    grp_bubble_sort_fu_196->ap_rst(ap_rst);
    grp_bubble_sort_fu_196->CROP_0_0_read(crop_0_0_load_reg_455);
    grp_bubble_sort_fu_196->CROP_0_1_read(crop_0_1_load_1_reg_475);
    grp_bubble_sort_fu_196->CROP_0_2_read(crop_0_2_reg_490);
    grp_bubble_sort_fu_196->CROP_1_0_read(crop_1_0_load_reg_465);
    grp_bubble_sort_fu_196->CROP_1_1_read(crop_1_1_load_1_reg_480);
    grp_bubble_sort_fu_196->CROP_1_2_read(crop_1_2_reg_495);
    grp_bubble_sort_fu_196->CROP_2_0_read(crop_2_0_load_reg_460);
    grp_bubble_sort_fu_196->CROP_2_1_read(crop_2_1_load_1_reg_470);
    grp_bubble_sort_fu_196->CROP_2_2_read(tmp_5_reg_485);
    grp_bubble_sort_fu_196->ap_return(grp_bubble_sort_fu_196_ap_return);
    grp_bubble_sort_fu_196->ap_ce(grp_bubble_sort_fu_196_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( exitcond_flatten_reg_420 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter1_state3);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_exitcond_flatten_fu_210_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_163 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_222_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_185 );
    sensitive << ( exitcond_flatten_fu_210_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_bubble_sort_fu_196_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_mid2_fu_282_p3);
    sensitive << ( i_reg_174 );
    sensitive << ( exitcond_fu_222_p2 );
    sensitive << ( i_s_fu_236_p2 );

    SC_METHOD(thread_i_s_fu_236_p2);
    sensitive << ( i_reg_174 );

    SC_METHOD(thread_icmp1_fu_268_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_210_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_1_fu_258_p4 );

    SC_METHOD(thread_icmp2_fu_306_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_210_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_fu_296_p4 );

    SC_METHOD(thread_icmp_fu_252_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_flatten_fu_210_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_fu_242_p4 );

    SC_METHOD(thread_in_stream_V_blk_n);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_flatten_reg_420 );

    SC_METHOD(thread_in_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_420 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_216_p2);
    sensitive << ( indvar_flatten_reg_163 );

    SC_METHOD(thread_j_1_fu_318_p2);
    sensitive << ( j_mid2_fu_228_p3 );

    SC_METHOD(thread_j_mid2_fu_228_p3);
    sensitive << ( j_reg_185 );
    sensitive << ( exitcond_fu_222_p2 );

    SC_METHOD(thread_or_cond_fu_312_p2);
    sensitive << ( tmp_mid2_fu_274_p3 );
    sensitive << ( icmp2_fu_306_p2 );

    SC_METHOD(thread_out_stream_V_blk_n);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );

    SC_METHOD(thread_out_stream_V_din);
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );
    sensitive << ( grp_bubble_sort_fu_196_ap_return );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_stream_V_write);
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_reg_pp0_iter12_or_cond_reg_446 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_temp_array_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_fu_290_p1 );

    SC_METHOD(thread_temp_array_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_temp_array_0_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_temp_array_0_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_420 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_temp_array_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_fu_290_p1 );

    SC_METHOD(thread_temp_array_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_temp_array_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_temp_array_1_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_420 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp_1_fu_258_p4);
    sensitive << ( i_reg_174 );

    SC_METHOD(thread_tmp_3_fu_296_p4);
    sensitive << ( j_mid2_fu_228_p3 );

    SC_METHOD(thread_tmp_8_fu_290_p1);
    sensitive << ( j_mid2_fu_228_p3 );

    SC_METHOD(thread_tmp_fu_242_p4);
    sensitive << ( i_s_fu_236_p2 );

    SC_METHOD(thread_tmp_mid2_fu_274_p3);
    sensitive << ( exitcond_fu_222_p2 );
    sensitive << ( icmp_fu_252_p2 );
    sensitive << ( icmp1_fu_268_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter12 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_stream_V_dout, "(port)in_stream_V_dout");
    sc_trace(mVcdFile, in_stream_V_empty_n, "(port)in_stream_V_empty_n");
    sc_trace(mVcdFile, in_stream_V_read, "(port)in_stream_V_read");
    sc_trace(mVcdFile, out_stream_V_din, "(port)out_stream_V_din");
    sc_trace(mVcdFile, out_stream_V_full_n, "(port)out_stream_V_full_n");
    sc_trace(mVcdFile, out_stream_V_write, "(port)out_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_stream_V_blk_n, "in_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_flatten_reg_420, "exitcond_flatten_reg_420");
    sc_trace(mVcdFile, out_stream_V_blk_n, "out_stream_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, or_cond_reg_446, "or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_or_cond_reg_446, "ap_reg_pp0_iter12_or_cond_reg_446");
    sc_trace(mVcdFile, indvar_flatten_reg_163, "indvar_flatten_reg_163");
    sc_trace(mVcdFile, i_reg_174, "i_reg_174");
    sc_trace(mVcdFile, j_reg_185, "j_reg_185");
    sc_trace(mVcdFile, exitcond_flatten_fu_210_p2, "exitcond_flatten_fu_210_p2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_420, "ap_reg_pp0_iter1_exitcond_flatten_reg_420");
    sc_trace(mVcdFile, indvar_flatten_next_fu_216_p2, "indvar_flatten_next_fu_216_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, i_mid2_fu_282_p3, "i_mid2_fu_282_p3");
    sc_trace(mVcdFile, temp_array_0_addr_reg_434, "temp_array_0_addr_reg_434");
    sc_trace(mVcdFile, temp_array_1_addr_reg_440, "temp_array_1_addr_reg_440");
    sc_trace(mVcdFile, or_cond_fu_312_p2, "or_cond_fu_312_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_or_cond_reg_446, "ap_reg_pp0_iter1_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_or_cond_reg_446, "ap_reg_pp0_iter2_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_or_cond_reg_446, "ap_reg_pp0_iter3_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_or_cond_reg_446, "ap_reg_pp0_iter4_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_or_cond_reg_446, "ap_reg_pp0_iter5_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_or_cond_reg_446, "ap_reg_pp0_iter6_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_or_cond_reg_446, "ap_reg_pp0_iter7_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_or_cond_reg_446, "ap_reg_pp0_iter8_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_or_cond_reg_446, "ap_reg_pp0_iter9_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_or_cond_reg_446, "ap_reg_pp0_iter10_or_cond_reg_446");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_or_cond_reg_446, "ap_reg_pp0_iter11_or_cond_reg_446");
    sc_trace(mVcdFile, j_1_fu_318_p2, "j_1_fu_318_p2");
    sc_trace(mVcdFile, crop_0_0_load_reg_455, "crop_0_0_load_reg_455");
    sc_trace(mVcdFile, crop_2_0_load_reg_460, "crop_2_0_load_reg_460");
    sc_trace(mVcdFile, crop_1_0_load_reg_465, "crop_1_0_load_reg_465");
    sc_trace(mVcdFile, crop_2_1_load_1_reg_470, "crop_2_1_load_1_reg_470");
    sc_trace(mVcdFile, crop_0_1_load_1_reg_475, "crop_0_1_load_1_reg_475");
    sc_trace(mVcdFile, crop_1_1_load_1_reg_480, "crop_1_1_load_1_reg_480");
    sc_trace(mVcdFile, tmp_5_reg_485, "tmp_5_reg_485");
    sc_trace(mVcdFile, temp_array_0_q0, "temp_array_0_q0");
    sc_trace(mVcdFile, crop_0_2_reg_490, "crop_0_2_reg_490");
    sc_trace(mVcdFile, temp_array_1_q0, "temp_array_1_q0");
    sc_trace(mVcdFile, crop_1_2_reg_495, "crop_1_2_reg_495");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter1_state3, "ap_condition_pp0_exit_iter1_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, temp_array_0_address0, "temp_array_0_address0");
    sc_trace(mVcdFile, temp_array_0_ce0, "temp_array_0_ce0");
    sc_trace(mVcdFile, temp_array_0_ce1, "temp_array_0_ce1");
    sc_trace(mVcdFile, temp_array_0_we1, "temp_array_0_we1");
    sc_trace(mVcdFile, temp_array_1_address0, "temp_array_1_address0");
    sc_trace(mVcdFile, temp_array_1_ce0, "temp_array_1_ce0");
    sc_trace(mVcdFile, temp_array_1_ce1, "temp_array_1_ce1");
    sc_trace(mVcdFile, temp_array_1_we1, "temp_array_1_we1");
    sc_trace(mVcdFile, grp_bubble_sort_fu_196_ap_return, "grp_bubble_sort_fu_196_ap_return");
    sc_trace(mVcdFile, grp_bubble_sort_fu_196_ap_ce, "grp_bubble_sort_fu_196_ap_ce");
    sc_trace(mVcdFile, tmp_8_fu_290_p1, "tmp_8_fu_290_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, crop_2_1_fu_88, "crop_2_1_fu_88");
    sc_trace(mVcdFile, crop_0_0_fu_92, "crop_0_0_fu_92");
    sc_trace(mVcdFile, crop_0_1_fu_96, "crop_0_1_fu_96");
    sc_trace(mVcdFile, crop_2_0_fu_100, "crop_2_0_fu_100");
    sc_trace(mVcdFile, crop_1_0_fu_104, "crop_1_0_fu_104");
    sc_trace(mVcdFile, crop_1_1_fu_108, "crop_1_1_fu_108");
    sc_trace(mVcdFile, exitcond_fu_222_p2, "exitcond_fu_222_p2");
    sc_trace(mVcdFile, i_s_fu_236_p2, "i_s_fu_236_p2");
    sc_trace(mVcdFile, tmp_fu_242_p4, "tmp_fu_242_p4");
    sc_trace(mVcdFile, tmp_1_fu_258_p4, "tmp_1_fu_258_p4");
    sc_trace(mVcdFile, icmp_fu_252_p2, "icmp_fu_252_p2");
    sc_trace(mVcdFile, icmp1_fu_268_p2, "icmp1_fu_268_p2");
    sc_trace(mVcdFile, j_mid2_fu_228_p3, "j_mid2_fu_228_p3");
    sc_trace(mVcdFile, tmp_3_fu_296_p4, "tmp_3_fu_296_p4");
    sc_trace(mVcdFile, tmp_mid2_fu_274_p3, "tmp_mid2_fu_274_p3");
    sc_trace(mVcdFile, icmp2_fu_306_p2, "icmp2_fu_306_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

filter::~filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_array_0_U;
    delete temp_array_1_U;
    delete grp_bubble_sort_fu_196;
}

void filter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_210_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter13 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter1_state3.read())) {
                ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter0.read();
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_210_p2.read()))) {
        i_reg_174 = i_mid2_fu_282_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_174 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_210_p2.read()))) {
        indvar_flatten_reg_163 = indvar_flatten_next_fu_216_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        indvar_flatten_reg_163 = ap_const_lv19_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_210_p2.read()))) {
        j_reg_185 = j_1_fu_318_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        j_reg_185 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_or_cond_reg_446 = ap_reg_pp0_iter9_or_cond_reg_446.read();
        ap_reg_pp0_iter11_or_cond_reg_446 = ap_reg_pp0_iter10_or_cond_reg_446.read();
        ap_reg_pp0_iter12_or_cond_reg_446 = ap_reg_pp0_iter11_or_cond_reg_446.read();
        ap_reg_pp0_iter2_or_cond_reg_446 = ap_reg_pp0_iter1_or_cond_reg_446.read();
        ap_reg_pp0_iter3_or_cond_reg_446 = ap_reg_pp0_iter2_or_cond_reg_446.read();
        ap_reg_pp0_iter4_or_cond_reg_446 = ap_reg_pp0_iter3_or_cond_reg_446.read();
        ap_reg_pp0_iter5_or_cond_reg_446 = ap_reg_pp0_iter4_or_cond_reg_446.read();
        ap_reg_pp0_iter6_or_cond_reg_446 = ap_reg_pp0_iter5_or_cond_reg_446.read();
        ap_reg_pp0_iter7_or_cond_reg_446 = ap_reg_pp0_iter6_or_cond_reg_446.read();
        ap_reg_pp0_iter8_or_cond_reg_446 = ap_reg_pp0_iter7_or_cond_reg_446.read();
        ap_reg_pp0_iter9_or_cond_reg_446 = ap_reg_pp0_iter8_or_cond_reg_446.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_420 = exitcond_flatten_reg_420.read();
        ap_reg_pp0_iter1_or_cond_reg_446 = or_cond_reg_446.read();
        crop_0_0_load_reg_455 = crop_0_0_fu_92.read();
        crop_1_0_load_reg_465 = crop_1_0_fu_104.read();
        crop_2_0_load_reg_460 = crop_2_0_fu_100.read();
        exitcond_flatten_reg_420 = exitcond_flatten_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        crop_0_0_fu_92 = crop_0_1_fu_96.read();
        crop_1_0_fu_104 = crop_1_1_fu_108.read();
        crop_2_0_fu_100 = crop_2_1_fu_88.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        crop_0_1_fu_96 = temp_array_0_q0.read();
        crop_0_2_reg_490 = temp_array_0_q0.read();
        crop_1_1_fu_108 = temp_array_1_q0.read();
        crop_1_2_reg_495 = temp_array_1_q0.read();
        crop_2_1_fu_88 = in_stream_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        crop_0_1_load_1_reg_475 = crop_0_1_fu_96.read();
        crop_1_1_load_1_reg_480 = crop_1_1_fu_108.read();
        crop_2_1_load_1_reg_470 = crop_2_1_fu_88.read();
        tmp_5_reg_485 = in_stream_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_210_p2.read()))) {
        or_cond_reg_446 = or_cond_fu_312_p2.read();
        temp_array_0_addr_reg_434 =  (sc_lv<10>) (tmp_8_fu_290_p1.read());
        temp_array_1_addr_reg_440 =  (sc_lv<10>) (tmp_8_fu_290_p1.read());
    }
}

void filter::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void filter::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[2];
}

void filter::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
  esl_seteq<1,1,1>(ap_reg_pp0_iter12_or_cond_reg_446.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read())));
}

void filter::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
  esl_seteq<1,1,1>(ap_reg_pp0_iter12_or_cond_reg_446.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read())));
}

void filter::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
  esl_seteq<1,1,1>(ap_reg_pp0_iter12_or_cond_reg_446.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read())));
}

void filter::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void filter::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = (esl_seteq<1,1,1>(ap_reg_pp0_iter12_or_cond_reg_446.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()));
}

void filter::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read()));
}

void filter::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void filter::thread_ap_condition_pp0_exit_iter1_state3() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
        ap_condition_pp0_exit_iter1_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter1_state3 = ap_const_logic_0;
    }
}

void filter::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void filter::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void filter::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void filter::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void filter::thread_exitcond_flatten_fu_210_p2() {
    exitcond_flatten_fu_210_p2 = (!indvar_flatten_reg_163.read().is_01() || !ap_const_lv19_57E40.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_163.read() == ap_const_lv19_57E40);
}

void filter::thread_exitcond_fu_222_p2() {
    exitcond_fu_222_p2 = (!j_reg_185.read().is_01() || !ap_const_lv10_258.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_185.read() == ap_const_lv10_258);
}

void filter::thread_grp_bubble_sort_fu_196_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_bubble_sort_fu_196_ap_ce = ap_const_logic_1;
    } else {
        grp_bubble_sort_fu_196_ap_ce = ap_const_logic_0;
    }
}

void filter::thread_i_mid2_fu_282_p3() {
    i_mid2_fu_282_p3 = (!exitcond_fu_222_p2.read()[0].is_01())? sc_lv<10>(): ((exitcond_fu_222_p2.read()[0].to_bool())? i_s_fu_236_p2.read(): i_reg_174.read());
}

void filter::thread_i_s_fu_236_p2() {
    i_s_fu_236_p2 = (!i_reg_174.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_174.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void filter::thread_icmp1_fu_268_p2() {
    icmp1_fu_268_p2 = (!tmp_1_fu_258_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_258_p4.read() != ap_const_lv9_0);
}

void filter::thread_icmp2_fu_306_p2() {
    icmp2_fu_306_p2 = (!tmp_3_fu_296_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_296_p4.read() != ap_const_lv9_0);
}

void filter::thread_icmp_fu_252_p2() {
    icmp_fu_252_p2 = (!tmp_fu_242_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_242_p4.read() != ap_const_lv9_0);
}

void filter::thread_in_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0))) {
        in_stream_V_blk_n = in_stream_V_empty_n.read();
    } else {
        in_stream_V_blk_n = ap_const_logic_1;
    }
}

void filter::thread_in_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_stream_V_read = ap_const_logic_1;
    } else {
        in_stream_V_read = ap_const_logic_0;
    }
}

void filter::thread_indvar_flatten_next_fu_216_p2() {
    indvar_flatten_next_fu_216_p2 = (!indvar_flatten_reg_163.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(indvar_flatten_reg_163.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void filter::thread_j_1_fu_318_p2() {
    j_1_fu_318_p2 = (!j_mid2_fu_228_p3.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_mid2_fu_228_p3.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void filter::thread_j_mid2_fu_228_p3() {
    j_mid2_fu_228_p3 = (!exitcond_fu_222_p2.read()[0].is_01())? sc_lv<10>(): ((exitcond_fu_222_p2.read()[0].to_bool())? ap_const_lv10_0: j_reg_185.read());
}

void filter::thread_or_cond_fu_312_p2() {
    or_cond_fu_312_p2 = (tmp_mid2_fu_274_p3.read() & icmp2_fu_306_p2.read());
}

void filter::thread_out_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter12_or_cond_reg_446.read(), ap_const_lv1_1))) {
        out_stream_V_blk_n = out_stream_V_full_n.read();
    } else {
        out_stream_V_blk_n = ap_const_logic_1;
    }
}

void filter::thread_out_stream_V_din() {
    out_stream_V_din = grp_bubble_sort_fu_196_ap_return.read();
}

void filter::thread_out_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter12_or_cond_reg_446.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_stream_V_write = ap_const_logic_1;
    } else {
        out_stream_V_write = ap_const_logic_0;
    }
}

void filter::thread_temp_array_0_address0() {
    temp_array_0_address0 =  (sc_lv<10>) (tmp_8_fu_290_p1.read());
}

void filter::thread_temp_array_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        temp_array_0_ce0 = ap_const_logic_1;
    } else {
        temp_array_0_ce0 = ap_const_logic_0;
    }
}

void filter::thread_temp_array_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        temp_array_0_ce1 = ap_const_logic_1;
    } else {
        temp_array_0_ce1 = ap_const_logic_0;
    }
}

void filter::thread_temp_array_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        temp_array_0_we1 = ap_const_logic_1;
    } else {
        temp_array_0_we1 = ap_const_logic_0;
    }
}

void filter::thread_temp_array_1_address0() {
    temp_array_1_address0 =  (sc_lv<10>) (tmp_8_fu_290_p1.read());
}

void filter::thread_temp_array_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        temp_array_1_ce0 = ap_const_logic_1;
    } else {
        temp_array_1_ce0 = ap_const_logic_0;
    }
}

void filter::thread_temp_array_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        temp_array_1_ce1 = ap_const_logic_1;
    } else {
        temp_array_1_ce1 = ap_const_logic_0;
    }
}

void filter::thread_temp_array_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_420.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        temp_array_1_we1 = ap_const_logic_1;
    } else {
        temp_array_1_we1 = ap_const_logic_0;
    }
}

void filter::thread_tmp_1_fu_258_p4() {
    tmp_1_fu_258_p4 = i_reg_174.read().range(9, 1);
}

void filter::thread_tmp_3_fu_296_p4() {
    tmp_3_fu_296_p4 = j_mid2_fu_228_p3.read().range(9, 1);
}

void filter::thread_tmp_8_fu_290_p1() {
    tmp_8_fu_290_p1 = esl_zext<64,10>(j_mid2_fu_228_p3.read());
}

void filter::thread_tmp_fu_242_p4() {
    tmp_fu_242_p4 = i_s_fu_236_p2.read().range(9, 1);
}

void filter::thread_tmp_mid2_fu_274_p3() {
    tmp_mid2_fu_274_p3 = (!exitcond_fu_222_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_222_p2.read()[0].to_bool())? icmp_fu_252_p2.read(): icmp1_fu_268_p2.read());
}

void filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter12.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter12.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

