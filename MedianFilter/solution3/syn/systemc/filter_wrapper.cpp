// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filter_wrapper.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int filter_wrapper::C_S_AXI_DATA_WIDTH = "100000";
const int filter_wrapper::C_S_AXI_WSTRB_WIDTH = "100";
const int filter_wrapper::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic filter_wrapper::ap_const_logic_1 = sc_dt::Log_1;
const int filter_wrapper::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int filter_wrapper::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int filter_wrapper::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int filter_wrapper::C_M_AXI_ID_WIDTH = "1";
const int filter_wrapper::C_M_AXI_ADDR_WIDTH = "100000";
const int filter_wrapper::C_M_AXI_DATA_WIDTH = "100000";
const int filter_wrapper::C_M_AXI_WSTRB_WIDTH = "100";
const int filter_wrapper::C_M_AXI_AWUSER_WIDTH = "1";
const int filter_wrapper::C_M_AXI_ARUSER_WIDTH = "1";
const int filter_wrapper::C_M_AXI_WUSER_WIDTH = "1";
const int filter_wrapper::C_M_AXI_RUSER_WIDTH = "1";
const int filter_wrapper::C_M_AXI_BUSER_WIDTH = "1";
const sc_logic filter_wrapper::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> filter_wrapper::ap_const_lv2_0 = "00";
const sc_lv<2> filter_wrapper::ap_const_lv2_1 = "1";
const sc_lv<1> filter_wrapper::ap_const_lv1_0 = "0";
const sc_lv<1> filter_wrapper::ap_const_lv1_1 = "1";
const sc_lv<32> filter_wrapper::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> filter_wrapper::ap_const_lv32_1 = "1";

filter_wrapper::filter_wrapper(sc_module_name name) : sc_module(name), mVcdFile(0) {
    filter_wrapper_AXILiteS_s_axi_U = new filter_wrapper_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("filter_wrapper_AXILiteS_s_axi_U");
    filter_wrapper_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    filter_wrapper_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    filter_wrapper_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    filter_wrapper_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    filter_wrapper_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    filter_wrapper_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    filter_wrapper_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    filter_wrapper_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    filter_wrapper_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    filter_wrapper_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    filter_wrapper_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    filter_wrapper_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    filter_wrapper_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    filter_wrapper_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    filter_wrapper_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    filter_wrapper_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    filter_wrapper_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    filter_wrapper_AXILiteS_s_axi_U->ACLK(ap_clk);
    filter_wrapper_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    filter_wrapper_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    filter_wrapper_AXILiteS_s_axi_U->ap_start(ap_start);
    filter_wrapper_AXILiteS_s_axi_U->interrupt(interrupt);
    filter_wrapper_AXILiteS_s_axi_U->ap_ready(ap_ready);
    filter_wrapper_AXILiteS_s_axi_U->ap_done(ap_done);
    filter_wrapper_AXILiteS_s_axi_U->ap_idle(ap_idle);
    filter_wrapper_AXILiteS_s_axi_U->in_array(in_array);
    filter_wrapper_AXILiteS_s_axi_U->out_array(out_array);
    filter_wrapper_gmem_m_axi_U = new filter_wrapper_gmem_m_axi<32,32,5,2,2,256,256,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("filter_wrapper_gmem_m_axi_U");
    filter_wrapper_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    filter_wrapper_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    filter_wrapper_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    filter_wrapper_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    filter_wrapper_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    filter_wrapper_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    filter_wrapper_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    filter_wrapper_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    filter_wrapper_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    filter_wrapper_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    filter_wrapper_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    filter_wrapper_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    filter_wrapper_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    filter_wrapper_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    filter_wrapper_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    filter_wrapper_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    filter_wrapper_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    filter_wrapper_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    filter_wrapper_gmem_m_axi_U->WID(m_axi_gmem_WID);
    filter_wrapper_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    filter_wrapper_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    filter_wrapper_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    filter_wrapper_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    filter_wrapper_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    filter_wrapper_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    filter_wrapper_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    filter_wrapper_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    filter_wrapper_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    filter_wrapper_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    filter_wrapper_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    filter_wrapper_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    filter_wrapper_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    filter_wrapper_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    filter_wrapper_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    filter_wrapper_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    filter_wrapper_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    filter_wrapper_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    filter_wrapper_gmem_m_axi_U->RID(m_axi_gmem_RID);
    filter_wrapper_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    filter_wrapper_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    filter_wrapper_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    filter_wrapper_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    filter_wrapper_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    filter_wrapper_gmem_m_axi_U->BID(m_axi_gmem_BID);
    filter_wrapper_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    filter_wrapper_gmem_m_axi_U->ACLK(ap_clk);
    filter_wrapper_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    filter_wrapper_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    filter_wrapper_gmem_m_axi_U->I_ARVALID(write_pixels_to_stre_U0_m_axi_in_array_ARVALID);
    filter_wrapper_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    filter_wrapper_gmem_m_axi_U->I_ARADDR(write_pixels_to_stre_U0_m_axi_in_array_ARADDR);
    filter_wrapper_gmem_m_axi_U->I_ARID(write_pixels_to_stre_U0_m_axi_in_array_ARID);
    filter_wrapper_gmem_m_axi_U->I_ARLEN(write_pixels_to_stre_U0_m_axi_in_array_ARLEN);
    filter_wrapper_gmem_m_axi_U->I_ARSIZE(write_pixels_to_stre_U0_m_axi_in_array_ARSIZE);
    filter_wrapper_gmem_m_axi_U->I_ARLOCK(write_pixels_to_stre_U0_m_axi_in_array_ARLOCK);
    filter_wrapper_gmem_m_axi_U->I_ARCACHE(write_pixels_to_stre_U0_m_axi_in_array_ARCACHE);
    filter_wrapper_gmem_m_axi_U->I_ARQOS(write_pixels_to_stre_U0_m_axi_in_array_ARQOS);
    filter_wrapper_gmem_m_axi_U->I_ARPROT(write_pixels_to_stre_U0_m_axi_in_array_ARPROT);
    filter_wrapper_gmem_m_axi_U->I_ARUSER(write_pixels_to_stre_U0_m_axi_in_array_ARUSER);
    filter_wrapper_gmem_m_axi_U->I_ARBURST(write_pixels_to_stre_U0_m_axi_in_array_ARBURST);
    filter_wrapper_gmem_m_axi_U->I_ARREGION(write_pixels_to_stre_U0_m_axi_in_array_ARREGION);
    filter_wrapper_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    filter_wrapper_gmem_m_axi_U->I_RREADY(write_pixels_to_stre_U0_m_axi_in_array_RREADY);
    filter_wrapper_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    filter_wrapper_gmem_m_axi_U->I_RID(gmem_RID);
    filter_wrapper_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    filter_wrapper_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    filter_wrapper_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    filter_wrapper_gmem_m_axi_U->I_AWVALID(read_pixels_from_str_U0_m_axi_out_array_AWVALID);
    filter_wrapper_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    filter_wrapper_gmem_m_axi_U->I_AWADDR(read_pixels_from_str_U0_m_axi_out_array_AWADDR);
    filter_wrapper_gmem_m_axi_U->I_AWID(read_pixels_from_str_U0_m_axi_out_array_AWID);
    filter_wrapper_gmem_m_axi_U->I_AWLEN(read_pixels_from_str_U0_m_axi_out_array_AWLEN);
    filter_wrapper_gmem_m_axi_U->I_AWSIZE(read_pixels_from_str_U0_m_axi_out_array_AWSIZE);
    filter_wrapper_gmem_m_axi_U->I_AWLOCK(read_pixels_from_str_U0_m_axi_out_array_AWLOCK);
    filter_wrapper_gmem_m_axi_U->I_AWCACHE(read_pixels_from_str_U0_m_axi_out_array_AWCACHE);
    filter_wrapper_gmem_m_axi_U->I_AWQOS(read_pixels_from_str_U0_m_axi_out_array_AWQOS);
    filter_wrapper_gmem_m_axi_U->I_AWPROT(read_pixels_from_str_U0_m_axi_out_array_AWPROT);
    filter_wrapper_gmem_m_axi_U->I_AWUSER(read_pixels_from_str_U0_m_axi_out_array_AWUSER);
    filter_wrapper_gmem_m_axi_U->I_AWBURST(read_pixels_from_str_U0_m_axi_out_array_AWBURST);
    filter_wrapper_gmem_m_axi_U->I_AWREGION(read_pixels_from_str_U0_m_axi_out_array_AWREGION);
    filter_wrapper_gmem_m_axi_U->I_WVALID(read_pixels_from_str_U0_m_axi_out_array_WVALID);
    filter_wrapper_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    filter_wrapper_gmem_m_axi_U->I_WDATA(read_pixels_from_str_U0_m_axi_out_array_WDATA);
    filter_wrapper_gmem_m_axi_U->I_WID(read_pixels_from_str_U0_m_axi_out_array_WID);
    filter_wrapper_gmem_m_axi_U->I_WUSER(read_pixels_from_str_U0_m_axi_out_array_WUSER);
    filter_wrapper_gmem_m_axi_U->I_WLAST(read_pixels_from_str_U0_m_axi_out_array_WLAST);
    filter_wrapper_gmem_m_axi_U->I_WSTRB(read_pixels_from_str_U0_m_axi_out_array_WSTRB);
    filter_wrapper_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    filter_wrapper_gmem_m_axi_U->I_BREADY(read_pixels_from_str_U0_m_axi_out_array_BREADY);
    filter_wrapper_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    filter_wrapper_gmem_m_axi_U->I_BID(gmem_BID);
    filter_wrapper_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    write_pixels_to_stre_U0 = new write_pixels_to_stre("write_pixels_to_stre_U0");
    write_pixels_to_stre_U0->ap_clk(ap_clk);
    write_pixels_to_stre_U0->ap_rst(ap_rst_n_inv);
    write_pixels_to_stre_U0->ap_start(write_pixels_to_stre_U0_ap_start);
    write_pixels_to_stre_U0->start_full_n(start_for_filter_U0_full_n);
    write_pixels_to_stre_U0->ap_done(write_pixels_to_stre_U0_ap_done);
    write_pixels_to_stre_U0->ap_continue(write_pixels_to_stre_U0_ap_continue);
    write_pixels_to_stre_U0->ap_idle(write_pixels_to_stre_U0_ap_idle);
    write_pixels_to_stre_U0->ap_ready(write_pixels_to_stre_U0_ap_ready);
    write_pixels_to_stre_U0->start_out(write_pixels_to_stre_U0_start_out);
    write_pixels_to_stre_U0->start_write(write_pixels_to_stre_U0_start_write);
    write_pixels_to_stre_U0->in_stream_V_din(write_pixels_to_stre_U0_in_stream_V_din);
    write_pixels_to_stre_U0->in_stream_V_full_n(in_stream_V_full_n);
    write_pixels_to_stre_U0->in_stream_V_write(write_pixels_to_stre_U0_in_stream_V_write);
    write_pixels_to_stre_U0->m_axi_in_array_AWVALID(write_pixels_to_stre_U0_m_axi_in_array_AWVALID);
    write_pixels_to_stre_U0->m_axi_in_array_AWREADY(ap_var_for_const1);
    write_pixels_to_stre_U0->m_axi_in_array_AWADDR(write_pixels_to_stre_U0_m_axi_in_array_AWADDR);
    write_pixels_to_stre_U0->m_axi_in_array_AWID(write_pixels_to_stre_U0_m_axi_in_array_AWID);
    write_pixels_to_stre_U0->m_axi_in_array_AWLEN(write_pixels_to_stre_U0_m_axi_in_array_AWLEN);
    write_pixels_to_stre_U0->m_axi_in_array_AWSIZE(write_pixels_to_stre_U0_m_axi_in_array_AWSIZE);
    write_pixels_to_stre_U0->m_axi_in_array_AWBURST(write_pixels_to_stre_U0_m_axi_in_array_AWBURST);
    write_pixels_to_stre_U0->m_axi_in_array_AWLOCK(write_pixels_to_stre_U0_m_axi_in_array_AWLOCK);
    write_pixels_to_stre_U0->m_axi_in_array_AWCACHE(write_pixels_to_stre_U0_m_axi_in_array_AWCACHE);
    write_pixels_to_stre_U0->m_axi_in_array_AWPROT(write_pixels_to_stre_U0_m_axi_in_array_AWPROT);
    write_pixels_to_stre_U0->m_axi_in_array_AWQOS(write_pixels_to_stre_U0_m_axi_in_array_AWQOS);
    write_pixels_to_stre_U0->m_axi_in_array_AWREGION(write_pixels_to_stre_U0_m_axi_in_array_AWREGION);
    write_pixels_to_stre_U0->m_axi_in_array_AWUSER(write_pixels_to_stre_U0_m_axi_in_array_AWUSER);
    write_pixels_to_stre_U0->m_axi_in_array_WVALID(write_pixels_to_stre_U0_m_axi_in_array_WVALID);
    write_pixels_to_stre_U0->m_axi_in_array_WREADY(ap_var_for_const1);
    write_pixels_to_stre_U0->m_axi_in_array_WDATA(write_pixels_to_stre_U0_m_axi_in_array_WDATA);
    write_pixels_to_stre_U0->m_axi_in_array_WSTRB(write_pixels_to_stre_U0_m_axi_in_array_WSTRB);
    write_pixels_to_stre_U0->m_axi_in_array_WLAST(write_pixels_to_stre_U0_m_axi_in_array_WLAST);
    write_pixels_to_stre_U0->m_axi_in_array_WID(write_pixels_to_stre_U0_m_axi_in_array_WID);
    write_pixels_to_stre_U0->m_axi_in_array_WUSER(write_pixels_to_stre_U0_m_axi_in_array_WUSER);
    write_pixels_to_stre_U0->m_axi_in_array_ARVALID(write_pixels_to_stre_U0_m_axi_in_array_ARVALID);
    write_pixels_to_stre_U0->m_axi_in_array_ARREADY(gmem_ARREADY);
    write_pixels_to_stre_U0->m_axi_in_array_ARADDR(write_pixels_to_stre_U0_m_axi_in_array_ARADDR);
    write_pixels_to_stre_U0->m_axi_in_array_ARID(write_pixels_to_stre_U0_m_axi_in_array_ARID);
    write_pixels_to_stre_U0->m_axi_in_array_ARLEN(write_pixels_to_stre_U0_m_axi_in_array_ARLEN);
    write_pixels_to_stre_U0->m_axi_in_array_ARSIZE(write_pixels_to_stre_U0_m_axi_in_array_ARSIZE);
    write_pixels_to_stre_U0->m_axi_in_array_ARBURST(write_pixels_to_stre_U0_m_axi_in_array_ARBURST);
    write_pixels_to_stre_U0->m_axi_in_array_ARLOCK(write_pixels_to_stre_U0_m_axi_in_array_ARLOCK);
    write_pixels_to_stre_U0->m_axi_in_array_ARCACHE(write_pixels_to_stre_U0_m_axi_in_array_ARCACHE);
    write_pixels_to_stre_U0->m_axi_in_array_ARPROT(write_pixels_to_stre_U0_m_axi_in_array_ARPROT);
    write_pixels_to_stre_U0->m_axi_in_array_ARQOS(write_pixels_to_stre_U0_m_axi_in_array_ARQOS);
    write_pixels_to_stre_U0->m_axi_in_array_ARREGION(write_pixels_to_stre_U0_m_axi_in_array_ARREGION);
    write_pixels_to_stre_U0->m_axi_in_array_ARUSER(write_pixels_to_stre_U0_m_axi_in_array_ARUSER);
    write_pixels_to_stre_U0->m_axi_in_array_RVALID(gmem_RVALID);
    write_pixels_to_stre_U0->m_axi_in_array_RREADY(write_pixels_to_stre_U0_m_axi_in_array_RREADY);
    write_pixels_to_stre_U0->m_axi_in_array_RDATA(gmem_RDATA);
    write_pixels_to_stre_U0->m_axi_in_array_RLAST(gmem_RLAST);
    write_pixels_to_stre_U0->m_axi_in_array_RID(gmem_RID);
    write_pixels_to_stre_U0->m_axi_in_array_RUSER(gmem_RUSER);
    write_pixels_to_stre_U0->m_axi_in_array_RRESP(gmem_RRESP);
    write_pixels_to_stre_U0->m_axi_in_array_BVALID(ap_var_for_const1);
    write_pixels_to_stre_U0->m_axi_in_array_BREADY(write_pixels_to_stre_U0_m_axi_in_array_BREADY);
    write_pixels_to_stre_U0->m_axi_in_array_BRESP(ap_var_for_const2);
    write_pixels_to_stre_U0->m_axi_in_array_BID(ap_var_for_const3);
    write_pixels_to_stre_U0->m_axi_in_array_BUSER(ap_var_for_const3);
    write_pixels_to_stre_U0->in_array_offset(in_array);
    write_pixels_to_stre_U0->out_array(out_array);
    write_pixels_to_stre_U0->out_array_out_din(write_pixels_to_stre_U0_out_array_out_din);
    write_pixels_to_stre_U0->out_array_out_full_n(out_array_c_full_n);
    write_pixels_to_stre_U0->out_array_out_write(write_pixels_to_stre_U0_out_array_out_write);
    filter_U0 = new filter("filter_U0");
    filter_U0->ap_clk(ap_clk);
    filter_U0->ap_rst(ap_rst_n_inv);
    filter_U0->ap_start(filter_U0_ap_start);
    filter_U0->ap_done(filter_U0_ap_done);
    filter_U0->ap_continue(filter_U0_ap_continue);
    filter_U0->ap_idle(filter_U0_ap_idle);
    filter_U0->ap_ready(filter_U0_ap_ready);
    filter_U0->in_stream_V_dout(in_stream_V_dout);
    filter_U0->in_stream_V_empty_n(in_stream_V_empty_n);
    filter_U0->in_stream_V_read(filter_U0_in_stream_V_read);
    filter_U0->out_stream_V_din(filter_U0_out_stream_V_din);
    filter_U0->out_stream_V_full_n(out_stream_V_full_n);
    filter_U0->out_stream_V_write(filter_U0_out_stream_V_write);
    read_pixels_from_str_U0 = new read_pixels_from_str("read_pixels_from_str_U0");
    read_pixels_from_str_U0->ap_clk(ap_clk);
    read_pixels_from_str_U0->ap_rst(ap_rst_n_inv);
    read_pixels_from_str_U0->ap_start(read_pixels_from_str_U0_ap_start);
    read_pixels_from_str_U0->ap_done(read_pixels_from_str_U0_ap_done);
    read_pixels_from_str_U0->ap_continue(read_pixels_from_str_U0_ap_continue);
    read_pixels_from_str_U0->ap_idle(read_pixels_from_str_U0_ap_idle);
    read_pixels_from_str_U0->ap_ready(read_pixels_from_str_U0_ap_ready);
    read_pixels_from_str_U0->out_stream_V_dout(out_stream_V_dout);
    read_pixels_from_str_U0->out_stream_V_empty_n(out_stream_V_empty_n);
    read_pixels_from_str_U0->out_stream_V_read(read_pixels_from_str_U0_out_stream_V_read);
    read_pixels_from_str_U0->m_axi_out_array_AWVALID(read_pixels_from_str_U0_m_axi_out_array_AWVALID);
    read_pixels_from_str_U0->m_axi_out_array_AWREADY(gmem_AWREADY);
    read_pixels_from_str_U0->m_axi_out_array_AWADDR(read_pixels_from_str_U0_m_axi_out_array_AWADDR);
    read_pixels_from_str_U0->m_axi_out_array_AWID(read_pixels_from_str_U0_m_axi_out_array_AWID);
    read_pixels_from_str_U0->m_axi_out_array_AWLEN(read_pixels_from_str_U0_m_axi_out_array_AWLEN);
    read_pixels_from_str_U0->m_axi_out_array_AWSIZE(read_pixels_from_str_U0_m_axi_out_array_AWSIZE);
    read_pixels_from_str_U0->m_axi_out_array_AWBURST(read_pixels_from_str_U0_m_axi_out_array_AWBURST);
    read_pixels_from_str_U0->m_axi_out_array_AWLOCK(read_pixels_from_str_U0_m_axi_out_array_AWLOCK);
    read_pixels_from_str_U0->m_axi_out_array_AWCACHE(read_pixels_from_str_U0_m_axi_out_array_AWCACHE);
    read_pixels_from_str_U0->m_axi_out_array_AWPROT(read_pixels_from_str_U0_m_axi_out_array_AWPROT);
    read_pixels_from_str_U0->m_axi_out_array_AWQOS(read_pixels_from_str_U0_m_axi_out_array_AWQOS);
    read_pixels_from_str_U0->m_axi_out_array_AWREGION(read_pixels_from_str_U0_m_axi_out_array_AWREGION);
    read_pixels_from_str_U0->m_axi_out_array_AWUSER(read_pixels_from_str_U0_m_axi_out_array_AWUSER);
    read_pixels_from_str_U0->m_axi_out_array_WVALID(read_pixels_from_str_U0_m_axi_out_array_WVALID);
    read_pixels_from_str_U0->m_axi_out_array_WREADY(gmem_WREADY);
    read_pixels_from_str_U0->m_axi_out_array_WDATA(read_pixels_from_str_U0_m_axi_out_array_WDATA);
    read_pixels_from_str_U0->m_axi_out_array_WSTRB(read_pixels_from_str_U0_m_axi_out_array_WSTRB);
    read_pixels_from_str_U0->m_axi_out_array_WLAST(read_pixels_from_str_U0_m_axi_out_array_WLAST);
    read_pixels_from_str_U0->m_axi_out_array_WID(read_pixels_from_str_U0_m_axi_out_array_WID);
    read_pixels_from_str_U0->m_axi_out_array_WUSER(read_pixels_from_str_U0_m_axi_out_array_WUSER);
    read_pixels_from_str_U0->m_axi_out_array_ARVALID(read_pixels_from_str_U0_m_axi_out_array_ARVALID);
    read_pixels_from_str_U0->m_axi_out_array_ARREADY(ap_var_for_const1);
    read_pixels_from_str_U0->m_axi_out_array_ARADDR(read_pixels_from_str_U0_m_axi_out_array_ARADDR);
    read_pixels_from_str_U0->m_axi_out_array_ARID(read_pixels_from_str_U0_m_axi_out_array_ARID);
    read_pixels_from_str_U0->m_axi_out_array_ARLEN(read_pixels_from_str_U0_m_axi_out_array_ARLEN);
    read_pixels_from_str_U0->m_axi_out_array_ARSIZE(read_pixels_from_str_U0_m_axi_out_array_ARSIZE);
    read_pixels_from_str_U0->m_axi_out_array_ARBURST(read_pixels_from_str_U0_m_axi_out_array_ARBURST);
    read_pixels_from_str_U0->m_axi_out_array_ARLOCK(read_pixels_from_str_U0_m_axi_out_array_ARLOCK);
    read_pixels_from_str_U0->m_axi_out_array_ARCACHE(read_pixels_from_str_U0_m_axi_out_array_ARCACHE);
    read_pixels_from_str_U0->m_axi_out_array_ARPROT(read_pixels_from_str_U0_m_axi_out_array_ARPROT);
    read_pixels_from_str_U0->m_axi_out_array_ARQOS(read_pixels_from_str_U0_m_axi_out_array_ARQOS);
    read_pixels_from_str_U0->m_axi_out_array_ARREGION(read_pixels_from_str_U0_m_axi_out_array_ARREGION);
    read_pixels_from_str_U0->m_axi_out_array_ARUSER(read_pixels_from_str_U0_m_axi_out_array_ARUSER);
    read_pixels_from_str_U0->m_axi_out_array_RVALID(ap_var_for_const1);
    read_pixels_from_str_U0->m_axi_out_array_RREADY(read_pixels_from_str_U0_m_axi_out_array_RREADY);
    read_pixels_from_str_U0->m_axi_out_array_RDATA(ap_var_for_const4);
    read_pixels_from_str_U0->m_axi_out_array_RLAST(ap_var_for_const1);
    read_pixels_from_str_U0->m_axi_out_array_RID(ap_var_for_const3);
    read_pixels_from_str_U0->m_axi_out_array_RUSER(ap_var_for_const3);
    read_pixels_from_str_U0->m_axi_out_array_RRESP(ap_var_for_const2);
    read_pixels_from_str_U0->m_axi_out_array_BVALID(gmem_BVALID);
    read_pixels_from_str_U0->m_axi_out_array_BREADY(read_pixels_from_str_U0_m_axi_out_array_BREADY);
    read_pixels_from_str_U0->m_axi_out_array_BRESP(gmem_BRESP);
    read_pixels_from_str_U0->m_axi_out_array_BID(gmem_BID);
    read_pixels_from_str_U0->m_axi_out_array_BUSER(gmem_BUSER);
    read_pixels_from_str_U0->out_array_offset_dout(out_array_c_dout);
    read_pixels_from_str_U0->out_array_offset_empty_n(out_array_c_empty_n);
    read_pixels_from_str_U0->out_array_offset_read(read_pixels_from_str_U0_out_array_offset_read);
    in_stream_V_U = new fifo_w32_d1024_A("in_stream_V_U");
    in_stream_V_U->clk(ap_clk);
    in_stream_V_U->reset(ap_rst_n_inv);
    in_stream_V_U->if_read_ce(ap_var_for_const0);
    in_stream_V_U->if_write_ce(ap_var_for_const0);
    in_stream_V_U->if_din(write_pixels_to_stre_U0_in_stream_V_din);
    in_stream_V_U->if_full_n(in_stream_V_full_n);
    in_stream_V_U->if_write(write_pixels_to_stre_U0_in_stream_V_write);
    in_stream_V_U->if_dout(in_stream_V_dout);
    in_stream_V_U->if_empty_n(in_stream_V_empty_n);
    in_stream_V_U->if_read(filter_U0_in_stream_V_read);
    out_array_c_U = new fifo_w32_d2_A("out_array_c_U");
    out_array_c_U->clk(ap_clk);
    out_array_c_U->reset(ap_rst_n_inv);
    out_array_c_U->if_read_ce(ap_var_for_const0);
    out_array_c_U->if_write_ce(ap_var_for_const0);
    out_array_c_U->if_din(write_pixels_to_stre_U0_out_array_out_din);
    out_array_c_U->if_full_n(out_array_c_full_n);
    out_array_c_U->if_write(write_pixels_to_stre_U0_out_array_out_write);
    out_array_c_U->if_dout(out_array_c_dout);
    out_array_c_U->if_empty_n(out_array_c_empty_n);
    out_array_c_U->if_read(read_pixels_from_str_U0_out_array_offset_read);
    out_stream_V_U = new fifo_w32_d1024_A("out_stream_V_U");
    out_stream_V_U->clk(ap_clk);
    out_stream_V_U->reset(ap_rst_n_inv);
    out_stream_V_U->if_read_ce(ap_var_for_const0);
    out_stream_V_U->if_write_ce(ap_var_for_const0);
    out_stream_V_U->if_din(filter_U0_out_stream_V_din);
    out_stream_V_U->if_full_n(out_stream_V_full_n);
    out_stream_V_U->if_write(filter_U0_out_stream_V_write);
    out_stream_V_U->if_dout(out_stream_V_dout);
    out_stream_V_U->if_empty_n(out_stream_V_empty_n);
    out_stream_V_U->if_read(read_pixels_from_str_U0_out_stream_V_read);
    start_for_filter_U0_U = new start_for_filter_U0("start_for_filter_U0_U");
    start_for_filter_U0_U->clk(ap_clk);
    start_for_filter_U0_U->reset(ap_rst_n_inv);
    start_for_filter_U0_U->if_read_ce(ap_var_for_const0);
    start_for_filter_U0_U->if_write_ce(ap_var_for_const0);
    start_for_filter_U0_U->if_din(start_for_filter_U0_din);
    start_for_filter_U0_U->if_full_n(start_for_filter_U0_full_n);
    start_for_filter_U0_U->if_write(write_pixels_to_stre_U0_start_write);
    start_for_filter_U0_U->if_dout(start_for_filter_U0_dout);
    start_for_filter_U0_U->if_empty_n(start_for_filter_U0_empty_n);
    start_for_filter_U0_U->if_read(filter_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( read_pixels_from_str_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( write_pixels_to_stre_U0_ap_idle );
    sensitive << ( filter_U0_ap_idle );
    sensitive << ( read_pixels_from_str_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( write_pixels_to_stre_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( read_pixels_from_str_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( write_pixels_to_stre_U0_ap_ready );

    SC_METHOD(thread_filter_U0_ap_continue);

    SC_METHOD(thread_filter_U0_ap_start);
    sensitive << ( start_for_filter_U0_empty_n );

    SC_METHOD(thread_filter_U0_start_full_n);

    SC_METHOD(thread_filter_U0_start_write);

    SC_METHOD(thread_read_pixels_from_str_U0_ap_continue);

    SC_METHOD(thread_read_pixels_from_str_U0_start_full_n);

    SC_METHOD(thread_read_pixels_from_str_U0_start_write);

    SC_METHOD(thread_start_for_filter_U0_din);

    SC_METHOD(thread_write_pixels_to_stre_U0_ap_continue);

    SC_METHOD(thread_write_pixels_to_stre_U0_ap_start);
    sensitive << ( ap_start );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    read_pixels_from_str_U0_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filter_wrapper_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, in_array, "in_array");
    sc_trace(mVcdFile, out_array, "out_array");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_ap_start, "write_pixels_to_stre_U0_ap_start");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_ap_done, "write_pixels_to_stre_U0_ap_done");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_ap_continue, "write_pixels_to_stre_U0_ap_continue");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_ap_idle, "write_pixels_to_stre_U0_ap_idle");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_ap_ready, "write_pixels_to_stre_U0_ap_ready");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_start_out, "write_pixels_to_stre_U0_start_out");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_start_write, "write_pixels_to_stre_U0_start_write");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_in_stream_V_din, "write_pixels_to_stre_U0_in_stream_V_din");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_in_stream_V_write, "write_pixels_to_stre_U0_in_stream_V_write");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWVALID, "write_pixels_to_stre_U0_m_axi_in_array_AWVALID");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWADDR, "write_pixels_to_stre_U0_m_axi_in_array_AWADDR");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWID, "write_pixels_to_stre_U0_m_axi_in_array_AWID");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWLEN, "write_pixels_to_stre_U0_m_axi_in_array_AWLEN");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWSIZE, "write_pixels_to_stre_U0_m_axi_in_array_AWSIZE");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWBURST, "write_pixels_to_stre_U0_m_axi_in_array_AWBURST");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWLOCK, "write_pixels_to_stre_U0_m_axi_in_array_AWLOCK");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWCACHE, "write_pixels_to_stre_U0_m_axi_in_array_AWCACHE");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWPROT, "write_pixels_to_stre_U0_m_axi_in_array_AWPROT");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWQOS, "write_pixels_to_stre_U0_m_axi_in_array_AWQOS");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWREGION, "write_pixels_to_stre_U0_m_axi_in_array_AWREGION");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_AWUSER, "write_pixels_to_stre_U0_m_axi_in_array_AWUSER");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_WVALID, "write_pixels_to_stre_U0_m_axi_in_array_WVALID");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_WDATA, "write_pixels_to_stre_U0_m_axi_in_array_WDATA");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_WSTRB, "write_pixels_to_stre_U0_m_axi_in_array_WSTRB");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_WLAST, "write_pixels_to_stre_U0_m_axi_in_array_WLAST");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_WID, "write_pixels_to_stre_U0_m_axi_in_array_WID");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_WUSER, "write_pixels_to_stre_U0_m_axi_in_array_WUSER");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARVALID, "write_pixels_to_stre_U0_m_axi_in_array_ARVALID");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARADDR, "write_pixels_to_stre_U0_m_axi_in_array_ARADDR");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARID, "write_pixels_to_stre_U0_m_axi_in_array_ARID");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARLEN, "write_pixels_to_stre_U0_m_axi_in_array_ARLEN");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARSIZE, "write_pixels_to_stre_U0_m_axi_in_array_ARSIZE");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARBURST, "write_pixels_to_stre_U0_m_axi_in_array_ARBURST");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARLOCK, "write_pixels_to_stre_U0_m_axi_in_array_ARLOCK");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARCACHE, "write_pixels_to_stre_U0_m_axi_in_array_ARCACHE");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARPROT, "write_pixels_to_stre_U0_m_axi_in_array_ARPROT");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARQOS, "write_pixels_to_stre_U0_m_axi_in_array_ARQOS");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARREGION, "write_pixels_to_stre_U0_m_axi_in_array_ARREGION");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_ARUSER, "write_pixels_to_stre_U0_m_axi_in_array_ARUSER");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_RREADY, "write_pixels_to_stre_U0_m_axi_in_array_RREADY");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_m_axi_in_array_BREADY, "write_pixels_to_stre_U0_m_axi_in_array_BREADY");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_out_array_out_din, "write_pixels_to_stre_U0_out_array_out_din");
    sc_trace(mVcdFile, write_pixels_to_stre_U0_out_array_out_write, "write_pixels_to_stre_U0_out_array_out_write");
    sc_trace(mVcdFile, filter_U0_ap_start, "filter_U0_ap_start");
    sc_trace(mVcdFile, filter_U0_ap_done, "filter_U0_ap_done");
    sc_trace(mVcdFile, filter_U0_ap_continue, "filter_U0_ap_continue");
    sc_trace(mVcdFile, filter_U0_ap_idle, "filter_U0_ap_idle");
    sc_trace(mVcdFile, filter_U0_ap_ready, "filter_U0_ap_ready");
    sc_trace(mVcdFile, filter_U0_in_stream_V_read, "filter_U0_in_stream_V_read");
    sc_trace(mVcdFile, filter_U0_out_stream_V_din, "filter_U0_out_stream_V_din");
    sc_trace(mVcdFile, filter_U0_out_stream_V_write, "filter_U0_out_stream_V_write");
    sc_trace(mVcdFile, read_pixels_from_str_U0_ap_start, "read_pixels_from_str_U0_ap_start");
    sc_trace(mVcdFile, read_pixels_from_str_U0_ap_done, "read_pixels_from_str_U0_ap_done");
    sc_trace(mVcdFile, read_pixels_from_str_U0_ap_continue, "read_pixels_from_str_U0_ap_continue");
    sc_trace(mVcdFile, read_pixels_from_str_U0_ap_idle, "read_pixels_from_str_U0_ap_idle");
    sc_trace(mVcdFile, read_pixels_from_str_U0_ap_ready, "read_pixels_from_str_U0_ap_ready");
    sc_trace(mVcdFile, read_pixels_from_str_U0_out_stream_V_read, "read_pixels_from_str_U0_out_stream_V_read");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWVALID, "read_pixels_from_str_U0_m_axi_out_array_AWVALID");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWADDR, "read_pixels_from_str_U0_m_axi_out_array_AWADDR");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWID, "read_pixels_from_str_U0_m_axi_out_array_AWID");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWLEN, "read_pixels_from_str_U0_m_axi_out_array_AWLEN");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWSIZE, "read_pixels_from_str_U0_m_axi_out_array_AWSIZE");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWBURST, "read_pixels_from_str_U0_m_axi_out_array_AWBURST");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWLOCK, "read_pixels_from_str_U0_m_axi_out_array_AWLOCK");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWCACHE, "read_pixels_from_str_U0_m_axi_out_array_AWCACHE");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWPROT, "read_pixels_from_str_U0_m_axi_out_array_AWPROT");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWQOS, "read_pixels_from_str_U0_m_axi_out_array_AWQOS");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWREGION, "read_pixels_from_str_U0_m_axi_out_array_AWREGION");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_AWUSER, "read_pixels_from_str_U0_m_axi_out_array_AWUSER");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_WVALID, "read_pixels_from_str_U0_m_axi_out_array_WVALID");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_WDATA, "read_pixels_from_str_U0_m_axi_out_array_WDATA");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_WSTRB, "read_pixels_from_str_U0_m_axi_out_array_WSTRB");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_WLAST, "read_pixels_from_str_U0_m_axi_out_array_WLAST");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_WID, "read_pixels_from_str_U0_m_axi_out_array_WID");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_WUSER, "read_pixels_from_str_U0_m_axi_out_array_WUSER");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARVALID, "read_pixels_from_str_U0_m_axi_out_array_ARVALID");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARADDR, "read_pixels_from_str_U0_m_axi_out_array_ARADDR");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARID, "read_pixels_from_str_U0_m_axi_out_array_ARID");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARLEN, "read_pixels_from_str_U0_m_axi_out_array_ARLEN");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARSIZE, "read_pixels_from_str_U0_m_axi_out_array_ARSIZE");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARBURST, "read_pixels_from_str_U0_m_axi_out_array_ARBURST");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARLOCK, "read_pixels_from_str_U0_m_axi_out_array_ARLOCK");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARCACHE, "read_pixels_from_str_U0_m_axi_out_array_ARCACHE");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARPROT, "read_pixels_from_str_U0_m_axi_out_array_ARPROT");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARQOS, "read_pixels_from_str_U0_m_axi_out_array_ARQOS");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARREGION, "read_pixels_from_str_U0_m_axi_out_array_ARREGION");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_ARUSER, "read_pixels_from_str_U0_m_axi_out_array_ARUSER");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_RREADY, "read_pixels_from_str_U0_m_axi_out_array_RREADY");
    sc_trace(mVcdFile, read_pixels_from_str_U0_m_axi_out_array_BREADY, "read_pixels_from_str_U0_m_axi_out_array_BREADY");
    sc_trace(mVcdFile, read_pixels_from_str_U0_out_array_offset_read, "read_pixels_from_str_U0_out_array_offset_read");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, in_stream_V_full_n, "in_stream_V_full_n");
    sc_trace(mVcdFile, in_stream_V_dout, "in_stream_V_dout");
    sc_trace(mVcdFile, in_stream_V_empty_n, "in_stream_V_empty_n");
    sc_trace(mVcdFile, out_array_c_full_n, "out_array_c_full_n");
    sc_trace(mVcdFile, out_array_c_dout, "out_array_c_dout");
    sc_trace(mVcdFile, out_array_c_empty_n, "out_array_c_empty_n");
    sc_trace(mVcdFile, out_stream_V_full_n, "out_stream_V_full_n");
    sc_trace(mVcdFile, out_stream_V_dout, "out_stream_V_dout");
    sc_trace(mVcdFile, out_stream_V_empty_n, "out_stream_V_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_filter_U0_din, "start_for_filter_U0_din");
    sc_trace(mVcdFile, start_for_filter_U0_full_n, "start_for_filter_U0_full_n");
    sc_trace(mVcdFile, start_for_filter_U0_dout, "start_for_filter_U0_dout");
    sc_trace(mVcdFile, start_for_filter_U0_empty_n, "start_for_filter_U0_empty_n");
    sc_trace(mVcdFile, filter_U0_start_full_n, "filter_U0_start_full_n");
    sc_trace(mVcdFile, filter_U0_start_write, "filter_U0_start_write");
    sc_trace(mVcdFile, read_pixels_from_str_U0_start_full_n, "read_pixels_from_str_U0_start_full_n");
    sc_trace(mVcdFile, read_pixels_from_str_U0_start_write, "read_pixels_from_str_U0_start_write");
#endif

    }
    mHdltvinHandle.open("filter_wrapper.hdltvin.dat");
    mHdltvoutHandle.open("filter_wrapper.hdltvout.dat");
}

filter_wrapper::~filter_wrapper() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete filter_wrapper_AXILiteS_s_axi_U;
    delete filter_wrapper_gmem_m_axi_U;
    delete write_pixels_to_stre_U0;
    delete filter_U0;
    delete read_pixels_from_str_U0;
    delete in_stream_V_U;
    delete out_array_c_U;
    delete out_stream_V_U;
    delete start_for_filter_U0_U;
}

void filter_wrapper::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void filter_wrapper::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void filter_wrapper::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv2_0;
}

void filter_wrapper::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void filter_wrapper::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_0;
}

void filter_wrapper::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        read_pixels_from_str_U0_ap_start = ap_const_logic_0;
    } else {
        read_pixels_from_str_U0_ap_start = ap_const_logic_1;
    }
}

void filter_wrapper::thread_ap_done() {
    ap_done = read_pixels_from_str_U0_ap_done.read();
}

void filter_wrapper::thread_ap_idle() {
    ap_idle = (write_pixels_to_stre_U0_ap_idle.read() & filter_U0_ap_idle.read() & read_pixels_from_str_U0_ap_idle.read());
}

void filter_wrapper::thread_ap_ready() {
    ap_ready = write_pixels_to_stre_U0_ap_ready.read();
}

void filter_wrapper::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void filter_wrapper::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void filter_wrapper::thread_ap_sync_done() {
    ap_sync_done = read_pixels_from_str_U0_ap_done.read();
}

void filter_wrapper::thread_ap_sync_ready() {
    ap_sync_ready = write_pixels_to_stre_U0_ap_ready.read();
}

void filter_wrapper::thread_filter_U0_ap_continue() {
    filter_U0_ap_continue = ap_const_logic_1;
}

void filter_wrapper::thread_filter_U0_ap_start() {
    filter_U0_ap_start = start_for_filter_U0_empty_n.read();
}

void filter_wrapper::thread_filter_U0_start_full_n() {
    filter_U0_start_full_n = ap_const_logic_1;
}

void filter_wrapper::thread_filter_U0_start_write() {
    filter_U0_start_write = ap_const_logic_0;
}

void filter_wrapper::thread_read_pixels_from_str_U0_ap_continue() {
    read_pixels_from_str_U0_ap_continue = ap_const_logic_1;
}

void filter_wrapper::thread_read_pixels_from_str_U0_start_full_n() {
    read_pixels_from_str_U0_start_full_n = ap_const_logic_1;
}

void filter_wrapper::thread_read_pixels_from_str_U0_start_write() {
    read_pixels_from_str_U0_start_write = ap_const_logic_0;
}

void filter_wrapper::thread_start_for_filter_U0_din() {
    start_for_filter_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void filter_wrapper::thread_write_pixels_to_stre_U0_ap_continue() {
    write_pixels_to_stre_U0_ap_continue = ap_const_logic_1;
}

void filter_wrapper::thread_write_pixels_to_stre_U0_ap_start() {
    write_pixels_to_stre_U0_ap_start = ap_start.read();
}

void filter_wrapper::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

